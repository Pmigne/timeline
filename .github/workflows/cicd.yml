name: build
on:
  push:
    branches: [main]
jobs:
  # build-web:
  #   name: Build Flutter (Web)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "2.8.0"
  #         channel: stable
  #     - name: Build web
  #       run: |
  #         flutter pub get
  #         flutter format --set-exit-if-changed .
  #         flutter analyze
  #         flutter test
  #         flutter build web
  #     - name: Zip Web Files
  #       uses: vimtor/action-zip@v1
  #       with:
  #         files: build/web
  #         dest: build/web/web-build.zip
  #     - name: Upload Web
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "build/web/web-build.zip"
  #         tag: V1.0.${{ github.run_number }}-Web
  #         token: ${{ secrets.TOKEN }}
  #         # Github -> Settings -> Developer settings -> Personal access tokens -> repo
  #         # Go to your repo -> Settings -> secrets -> New repo secret -> TOKEN (and paste the secret generated by github previously)
  # build-ios:
  #   name: Build Flutter (iOS)
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: "dev"
  #     - name: Build iPA
  #       run: |
  #         flutter pub get
  #         flutter clean
  #         flutter format --set-exit-if-changed .
  #         flutter analyze
  #         flutter test
  #         flutter build ios --debug --no-codesign
  #     - name: Zip iOS Files
  #       uses: vimtor/action-zip@v1
  #       with:
  #         files: build/ios/iphoneos
  #         dest: build/ios/ios-build.zip
  #     - name: Upload iPA
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "build/ios/ios-build.zip"
  #         tag: V1.0.${{ github.run_number }}-iOS
  #         token: ${{ secrets.TOKEN }}
  # build-apk:
  #   name: Build Flutter (Android)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "2.8.0"
  #         channel: stable
  #     - name: Build APK
  #       run: |
  #         flutter pub get
  #         flutter format --set-exit-if-changed .
  #         flutter analyze
  #         flutter test
  #         flutter build apk --debug --split-per-abi
  #     - name: Zip Android Files
  #       uses: vimtor/action-zip@v1
  #       with:
  #         files: build/app/outputs/apk/debug
  #         dest: build/app/outputs/apk/debug/apk-build.zip
  #     - name: Upload APK
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "build/app/outputs/apk/debug/apk-build.zip"
  #         tag: V1.0.${{ github.run_number }}-Android
  #         token: ${{ secrets.TOKEN }}
  # build-windows:
  #   name: Build Flutter (Windows)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "2.8.0"
  #         channel: stable
  #     - name: Build Windows
  #       run: |
  #         flutter config --enable-windows-desktop
  #         flutter pub get
  #         flutter format --set-exit-if-changed .
  #         flutter analyze
  #         flutter test
  #         flutter build windows
  #     - name: Zip Windows Files
  #       uses: vimtor/action-zip@v1
  #       with:
  #         files: build/windows/runner/Release
  #         dest: build/windows/runner/Release/windows-build.zip
  #     - name: Upload Windows
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "build/windows/runner/Release/windows-build.zip"
  #         tag: V1.0.${{ github.run_number }}-Windows
  #         token: ${{ secrets.TOKEN }}
  # build-linux:
  #   name: Build Flutter (Linux)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "2.8.0"
  #         channel: stable
  #     - name: Build Linux
  #       run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y ninja-build libgtk-3-dev
  #         flutter config --enable-linux-desktop
  #         flutter clean
  #         flutter create .
  #         flutter pub get
  #         flutter format --set-exit-if-changed .
  #         flutter analyze
  #         flutter test
  #         flutter build linux
  #     - name: Zip Linux Files
  #       uses: vimtor/action-zip@v1
  #       with:
  #         files: build/linux/x64/release/bundle
  #         dest: build/linux/x64/release/bundle/linux-build.zip
  #     - name: Upload Linux
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "build/linux/x64/release/bundle/linux-build.zip"
  #         tag: V1.0.${{ github.run_number }}-Linux
  #         token: ${{ secrets.TOKEN }}
  build-macos:
    name: Build Flutter (MacOS)
    id: build-macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.8.0"
          channel: stable
      - name: Build MacOS
        run: |
          flutter config --enable-macos-desktop
          flutter clean
          flutter create .
          flutter pub get
          flutter format --set-exit-if-changed .
          flutter analyze
          flutter test
          flutter build macos
      - name: Zip Linux Files
        uses: vimtor/action-zip@v1
        with:
          files: build/macos/Build/Products/Release
          dest: build/macos/Build/Products/Release/macos-build.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: build/macos/Build/Products/Release/macos-build.zip
  upload-builds:
    name: Upload Builds
    if: steps.build-macos.outcome == 'success'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: build/macos/Build/Products/Release/macos-build.zip
      - name: Upload builds
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/macos/Build/Products/Release/macos-build.zip"
          tag: V1.0.${{ github.run_number }}-MacOS
          token: ${{ secrets.TOKEN }}
